[project]
name = "mimic"
version = "0.2.3"
description = "A simple internal FastAPI service"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.116.1",
    "fastmcp>=2.11.3",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pygithub>=2.7.0",
    "pynacl>=1.5.0",
    "uvicorn[standard]>=0.35.0",
]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pyright>=1.1.404",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.9",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.ruff]
target-version = "py313"
line-length = 88
fix = true
exclude = ["unify_client"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
exclude = ["unify_client"]
typeCheckingMode = "standard"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
